{"title":"Review of \"What are the programming mistakes most inexperienced programmers make?\"","permalink":"/posts/what-are-the-programming-mistakes-most-inexperienced-programmers-make","post":{"title":"Review of \"What are the programming mistakes most inexperienced programmers make?\"","categories":"Review","__content":"<h2 id=\"tldr\">TL;DR</h2>\n<h3 id=\"answer1\">Answer 1</h3>\n<ul>\n<li>Deploy experimental feature on Friday, it crashes the whole system<ul>\n<li>Never put yourself in a position to make mistake<ul>\n<li>TDD</li></ul></li>\n<li>Not a good idea to deploy big stuff on Friday</li>\n<li>Think about the risk before deploy</li>\n<li>Confirm after deploy asap</li>\n<li>Don't be afraid to move fast and break things<ul>\n<li>Mistake make you grow</li></ul></li></ul></li>\n</ul>\n<p>Short summary</p>\n<p>We did everything he mentioned besides TDD, just keep it as a reminder.</p>\n<!-- more -->\n<h3 id=\"answer2\">Answer 2</h3>\n<ul>\n<li>Early optimization is bad<ul>\n<li>Lower readability</li></ul></li>\n<li>Readablility &gt; Performance (in most cases)<ul>\n<li>only tune performance on bottleneck</li>\n<li>compiler is smart enough to optimize</li>\n<li>Note: firmware have performance &gt; readability</li></ul></li>\n</ul>\n<p>Short summary</p>\n<p>I argee the points. Premature optimization is bad, but sometime it is hard to determine what is premature optimization. We should have Readablility &gt; Performance unless we are doing very low level stuff. </p>\n<h3 id=\"answer3\">Answer 3</h3>\n<ul>\n<li>Ask for code review, read code of great engineer</li>\n</ul>\n<h3 id=\"answer4\">Answer 4</h3>\n<ul>\n<li>Abuse OOP, don't forget single responsibility</li>\n<li>over-complicated</li>\n<li>over-simplifying</li>\n<li>extreme failure test<ul>\n<li>shutdown and turn on the database</li>\n<li>flush all the cache</li></ul></li>\n</ul>\n<h3 id=\"answer5\">Answer 5</h3>\n<ul>\n<li>Reinvent the wheel</li>\n<li>Code before think</li>\n<li>Use the wrong tool, simply because it is popular</li>\n</ul>\n<h3 id=\"answer6\">Answer 6</h3>\n<ul>\n<li>Infatuated with the process of building the product<ul>\n<li>Get things done, engineer are solving problems</li></ul></li>\n<li>Ingore code written by others</li>\n</ul>\n<h3 id=\"answer7\">Answer 7</h3>\n<ul>\n<li>Someone make his AWS key public...<ul>\n<li>Luckily, Amazon recover the cost</li></ul></li>\n</ul>\n<h2 id=\"summary\">Summary</h2>\n<ul>\n<li>Read others code to learn</li>\n<li>Study TDD</li>\n<li>Focus on problem solving</li>\n<li>Code before think</li>\n<li>Think about risk before deploy</li>\n</ul>\n<p>Reference: <a href=\"https://www.quora.com/What-are-the-programming-mistakes-most-inexperienced-programmers-make\">What are the programming mistakes most inexperienced programmers make?</a>.</p>","date":"2016-06-09T06:03:34.000Z","filePath":"/Users/sunday/workspace/coding-sunday/source/_posts/review/what-are-the-programming-mistakes-most-inexperienced-programmers-make.md","slug":"what-are-the-programming-mistakes-most-inexperienced-programmers-make"}}