{"title":"Review of \"Reuse Myth - can you afford reusable code?\"","categories":"Review","__content":"<p>Testability &gt; Reusability when writing code.</p>\n<h2 id=\"reviewedpoints\">Reviewed points</h2>\n<ul>\n<li>Testability &gt; Reusability<ul>\n<li>The cost to make a code reusable (general) enough is high</li>\n<li>Actually what we want is modularity, high cohesion, low coupling</li>\n<li>Very little code can be reuse four times, but we always need to test the code<ul>\n<li>Design the code for test is more practical than design for reuse</li></ul></li></ul></li>\n<li>When to reuse?<ul>\n<li>We still reuse the code if possible, but when?</li>\n<li>Micro answer<ul>\n<li>Find module to use before coding a new one</li>\n<li>Refactor the code to make it reusable after we reuse it 3 or 4 times<ul>\n<li>Refactor should be easy if the code is design for test</li></ul></li></ul></li>\n<li>Macro answer<ul>\n<li>If the code widely reusable, make it as a library, a plugin or an application<ul>\n<li>Let market to decide the economics of reusability</li></ul></li></ul></li></ul></li>\n</ul>\n<!-- more -->\n<h2 id=\"review\">Review</h2>\n<p>It is a article explain the slide reviewed <a href=\"review/2016/05/02/how-much-quality-can-we-afford/\">here</a>. It explain the idea of the slide in a detail way. Quite good. For the macro answer of reusability, it looks not very practical for a developer.</p>\n<p>It mentions a book named \"Mythical Man Month\", it seems a good book.</p>\n<p>Reference: <a href=\"http://allankelly.blogspot.hk/2010/10/reuse-myth-can-you-afford-reusable-code.html\">Reuse Myth - can you afford reusable code?</a>.</p>","date":"2016-05-02T15:53:58.000Z","filePath":"/Users/sunday/workspace/coding-sunday/source/_posts/review/reuse-myth-can-you-afford-reusable-code.md","slug":"reuse-myth-can-you-afford-reusable-code"}