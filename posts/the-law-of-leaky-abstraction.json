{"title":"Review of \"The Law of Leaky Abstractions\"","permalink":"/the-law-of-leaky-abstraction","post":{"title":"Review of \"The Law of Leaky Abstractions\"","date":"2016-05-14T00:00:00.000Z","categories":"Review","__content":"<p>Abstraction is hiding infomation to simplify a task. In most cases, abstraction is doing well. But in some cases, something inside abstraction layer can go wrong and make the abstraction fail, user have no ideas what is going on as the detail is hidden. The only way to fix it is to check the implementation of the abstracted layer. Therefore, abstraction fail to save us from complexity.</p>\n<h2 id=\"paradox\">Paradox</h2>\n<p>Programmers want to make programming easier by providing abstraction, but become a proficient programmer is getting harder. Programmer have to understand all related abstraction layer to solve bugs caused by leaky abstraction. At the end, programmer cannot escape from understand the detail of abstraction layer.</p>\n<!-- more -->\n<h2 id=\"nextaction\">Next Action</h2>\n<p>Need to have broaden our knowledge in different abstraction layer, otherwise, we will get stuck when there is leaky abstraction.</p>\n<p>Reinvent the wheel is not encouraged, but understand why and how a wheel is invented is useful. To understand that, reinvent the wheel is a efficient way. Bare in mind everytime we going to reinvent the wheel: focus on learning, not building.</p>","filePath":"/Users/sunday/workspace/coding-sunday/source/_posts/review/the-law-of-leaky-abstraction.md","slug":"the-law-of-leaky-abstraction"}}