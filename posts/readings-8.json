{"title":"文集八","language":"zh-tw","date":"2016-08-07T00:00:00.000Z","categories":"Insight","__content":"<h1 id=\"httpwwwcnblogscomguaiguaiarchive20070926907112html\"><a href=\"http://www.cnblogs.com/guaiguai/archive/2007/09/26/907112.html\">勿在沙浮筑高台, 再论社区风格</a></h1>\n<blockquote>\n  <p>过去有前辈跟我说, 学好数学就要学好数学史, 学好哲学就要学好哲学史. 为什么? 因为这反映的是人类思维的变化与进步.</p>\n</blockquote>\n<p>相當同意，歷史可以令我地明白有咩問題要解決，同埋當時嘅問題點樣解決，後人點樣improve 個solution。單睇solution唔能夠理解解決問題嘅思路。透過了解思維嘅轉變，可以對問題有更深入嘅了解。</p>\n<h1 id=\"httpwwwcnblogscomguaiguaiarchive20071104948657html\"><a href=\"http://www.cnblogs.com/guaiguai/archive/2007/11/04/948657.html\">闲谈: 就那么回事</a></h1>\n<p>當中對ORM嘅批評，可以係了解後再思考一下。</p>\n<h1 id=\"httpwwwcnblogscomguaiguaiarchive20071117962869html\"><a href=\"http://www.cnblogs.com/guaiguai/archive/2007/11/17/962869.html\">零碎: 学习, 技术明星, 面向对象</a></h1>\n<p>文中討論左好多Design Pattern點拆，D logic要分到幾細，又有好多唔同嘅situation，又有唔同嘅做法。大家都想用logic同數學去建立一D規則。我覺得當中有一個盲點，就係忽略左「人」E樣野。所謂 spaghetti code 都難免係主觀嘅，個重點可能唔係D logic有幾複雜，而係「人」點樣去接收，點樣去理解D logic。每個requirement都係特別，每個 business 嘅變化都唔同，根本好難去建立一D廣乏應用嘅規則。反而用一D寫文章，communication嘅concept去寫code，似乎會更易maintain。</p>\n<!-- more -->\n<h1 id=\"httpwwwcnblogscomguaiguaiarchive200801061027999html\"><a href=\"http://www.cnblogs.com/guaiguai/archive/2008/01/06/1027999.html\">回帖整理: 论团队中的设计工作</a></h1>\n<blockquote>\n  <p>个人水平提高了, 带领的团队质量反而变差了. 但是很多人的认识方法是, 那是因为我还做的不够好. 其实不是这样的, 我觉得我们要反思过去快乐的日子的合理性, 并且承认它. 现在我体会到, 其实我现在做的这种框架式的, 创新型的工作, 如果想提高效率, 必须所有人都具有相当的水平, 并且愿意下力气. 任何一种过程方法, 都解决不了我的难题. 我觉得作为技术组织, 总有一天会进行更高层次的提升才能活, 而不被淘汰. 那时候, 你的团队, 如果都是人肉代码生成器的话, 他们跟的上吗?</p>\n</blockquote>\n<p>團隊平均能力好重要。寫code同係工廠做product唔同，好難做QA。寫code冇得話跟住example copy，要經過思考，對人嘅 dependency 好大。如果條 team 能力跟唔上，無論個product design得幾好，個plan draft得幾好，都係execute唔到。</p>\n<h1 id=\"tddhttpwwwcnblogscomguaiguaiarchive200803161108079html\"><a href=\"http://www.cnblogs.com/guaiguai/archive/2008/03/16/1108079.html\">三问TDD: 单元测试总是好的吗？</a></h1>\n<blockquote>\n  <p>最初的时候我总觉得TDD最核心的是T，Test。后来才开始明白，它最核心的其实是D，Drive（我非常认同，这就是我说的测试之外的东西）。你可以把测试写的 很弱，但你一定要在此影响下把代码重构的很好。</p>\n</blockquote>\n<p>一語道破我個盲點，冇test唔緊要，最緊要D code structure靚，testable。Testable 嘅 code 多數條理分明，易讀易明，自然少bug，易maintain。重點係code structure，而唔係有冇test，為 test 而 test 係冇咩謂。</p>\n<h1 id=\"httpwwwcnblogscomguaiguaiarchive200804211164143html\"><a href=\"http://www.cnblogs.com/guaiguai/archive/2008/04/21/1164143.html\">闲言碎语</a></h1>\n<p>原來.Net有樣野叫LINQ，D syntax同sql statement builder 有D似。我睇過js version嘅LINQ npm，但係好似唔係database layer，而係果好似underscore咁，process data嘅library。</p>","filePath":"/Users/sunday/workspace/coding-sunday/source/_posts/insight/readings-8.md","slug":"readings-8"}