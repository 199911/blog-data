{"title":"\"CSS: The Definitive Guide 3rd Edition\" part 2","permalink":"/posts/css-the-definitive-guide-3rd-edition-2","post":{"title":"\"CSS: The Definitive Guide 3rd Edition\" part 2","date":"2017-01-22T00:00:00.000Z","categories":"Review","__content":"<h1 id=\"4valuesandunits\">4 Values and Units</h1>\n<ul>\n<li>There are only 17 defined color in css 2.1, but CSS 3 have 140 color, which recongized by most browsers.</li>\n<li><code>rgb(50%, 0%, 100%)</code> is a valid color</li>\n<li>The \"web-safe\" colors are those colors that generally avoid dithering on 256-color computer systems</li>\n<li>Value can be express in multiple of 20%</li>\n<li>I think we don't need to care these nowadays</li>\n</ul>\n<!-- more -->\n<h2 id=\"lengthunits\">Length units</h2>\n<ul>\n<li>Valid units: <code>in</code>, <code>cm</code>, <code>mm</code>, <code>pt</code>, <code>pc</code> (picas)</li>\n<li><code>em</code> and <code>ex</code> stand for \"em-height\" and \"x-height\"</li>\n<li>Different fonts with same <code>em</code> may have different <code>ex</code>, as the font design is different<ul>\n<li>But in practical, not all font have <code>ex</code> defined, will fallback to convention (<code>0.5 em</code> = <code>1 ex</code>)</li></ul></li>\n<li><code>1 em</code> = <code>14 px</code></li>\n<li><code>12 pt</code> = <code>1 pc</code></li>\n<li><code>72 pt</code> = <code>1 in</code> is only correct in classic mac, as the monitor have different ppi (pt per in).</li>\n<li>Don't assume OS can convert <code>pt</code> to accurate length on monitor, it is the reason to avoid <code>pt</code>.</li>\n<li><code>in</code> is a reliable unit</li>\n<li>Absolute unit (in, cm, mm) is more useful in <code>print</code> media</li>\n<li><code>px</code> may scale when print, so it is defined as relative unit</li>\n<li><code>ex</code> is not commonly used, use <code>em</code> or <code>px</code> is better</li>\n</ul>\n<h2 id=\"listofvalue\">List of value</h2>\n<ul>\n<li>number</li>\n<li>color</li>\n<li>uri</li>\n<li>keyword</li>\n<li>angle (deg, grad, rad)</li>\n<li>time</li>\n<li>frequency</li>\n</ul>\n<h1 id=\"5fonts\">5 Fonts</h1>\n<ul>\n<li>Don't forget provide fallback for font family</li>\n<li>Use quotation mark as font family may have special characters</li>\n<li>Fonts have variant</li>\n<li>Example: Zurich Bold, Zurich Black, Zurich UltraBlack, Zurich Light, and Zurich Regular</li>\n<li><code>font-weight</code> is using different font variant</li>\n<li><code>font-weight</code> to font variant conversion is complex, check the book if needed.</li>\n<li>lighter / bolder is relative value</li>\n<li>Increase / decrease <code>font-weight</code> inherit by parent</li>\n<li>Font size is the size of em box</li>\n<li>From baseline to extra leading</li>\n<li>Font size is not size of any characters</li>\n<li>There absolutive and relative font size value keywords</li>\n<li>Absolute keywords: (increase or decrease by a constant factor for each keywords)</li>\n<li>Relative keywords: (larger / smaller) same factor as absolute keywords<ul>\n<li>Relative keywords in font size and weight is useful when define style of tags like <code>&lt;em&gt;</code>, <code>&lt;strong&gt;</code></li></ul></li>\n<li>Percentage value in font-size is effectively cumulative</li>\n<li>PS: Round off to integer</li>\n<li>Small caps font variant</li>\n<li>Instead of upper and lowercase letters, a small-caps font employs uppercase letters of different sizes.</li>\n<li><code>font-stretch</code> and <code>font-size-adjust</code> are not implemented</li>\n</ul>\n<h2 id=\"systemfonts\">System fonts</h2>\n<p>These are used to take the font size, family, weight, style, and variant of elements of the operating system, and apply them to an element.</p>\n<ul>\n<li>caption</li>\n<li>icon</li>\n<li>menu</li>\n<li>message-box</li>\n<li>small-caption</li>\n<li>status-bar</li>\n</ul>\n<h2 id=\"fontsynthesis\">Font synthesis</h2>\n<p>From <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/font-synthesis\">MDN</a>, <code>font-synthesis</code> control the generaton of missing typefaces</p>\n<h1 id=\"6textproperties\">6 Text Properties</h1>\n<ul>\n<li><p><code>text-indent</code></p></li>\n<li><p>Only works on block level elements. Use padding in inline elements</p></li>\n<li><p>Percentage is relative to the parent's width</p></li>\n<li><p>Always inherited the computed value, not declared value</p></li>\n<li><p><code>text-align</code> can be ugly when</p></li>\n<li><p>the container is too narrow</p></li>\n<li><p>the word are too long (can use hyphenation)</p></li>\n<li><p><code>line-height</code></p></li>\n<li><p>The line will be short when the children have a larger font size</p></li>\n<li><p>Use factors (number without value) to overcome inheritances problem</p>\n<ul>\n<li>Because the value is relative to font size</li></ul></li>\n<li><p><code>vertical-align</code> does not work on block elements</p></li>\n<li><p>We can use it to align <code>inline-block</code> and <code>inline</code> elements</p></li>\n<li><p><code>text-decoration</code> is not inherited, but the decoration is still appear in children (it is from parent, not children's decoration)</p></li>\n<li>To remove the children's decoration, use text-decoration: none;\n\n<ul>\n<li>In other elements, we use <code>initial</code></li></ul>\n\n</li>\n</ul>\n<h2 id=\"whitespace\">White space</h2>\n<ul>\n<li>pre: keep all, no auto line wrapping (no line break unless there are new line character)</li>\n<li>pre-wrap: keep all space, and line wrap normally</li>\n<li>pre-line: collapse the space within the same line, and line wrap normally</li>\n</ul>\n<h2 id=\"textdirection\">Text direction</h2>\n<p><code>direction</code> affects the writing direction of text in a block-level element, the direction of table column layout, the direction in which content horizontally overflows its element box, and the position of the last line of a fully justified element.\nFor inline elements, direction applies only if the property unicode-bidi is set to either embed or bidi-override.\nFor top to bottom language, CSS 3 have writing mode</p>\n<h1 id=\"7basicvisualformatting\">7 Basic Visual Formatting</h1>\n<ul>\n<li>margin can be negative, but size, padding and border cannot be negative</li>\n<li>The computed value of percentage size is taken as the height of the containing block-level</li>\n<li>Size <code>auto</code> is the minimum size that contain the whole content</li>\n</ul>\n<h2 id=\"collapsingmargin\">Collapsing margin</h2>\n<p>Only vertical will collapse. not horizontal margins. For other case, refer to <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Mastering_margin_collapsing\">MDN</a>.</p>\n<ul>\n<li>anonymous text</li>\n<li>the texts in inline elements but don't inside the nested inline element</li>\n<li>em box</li>\n<li>inline box</li>\n<li>content area</li>\n<li>leading</li>\n<li>height of the box = line-height (box of one line)</li>\n<li>line box</li>\n<li>shortest box bounds the highest and the lowest points of inline boxes (multi line inline box)</li>\n<li>percentage value of vertical-align take value from line-height</li>\n<li>Because vertical-align is align in line level, not block level</li>\n<li>Line in the same block can have different computed value of line-height, if we use number without unit</li>\n<li>It is computed base on height of elements in each line.</li>\n<li>Characters are usually smaller than their em boxes</li>\n<li>But cursives fonts usually have character glyphs larger than their em boxes.</li>\n<li>Adding padding and borders does not affect the height of the inline box</li>\n<li>Margin top and bottom does not apply to inline non-replaced elements</li>\n<li>Inline replaced element is align to baseline</li>\n<li>which may create a gap which is half leading</li>\n<li>Computed value of display can change if an element is floated or positioned.</li>\n</ul>\n<h1 id=\"8paddingbordersandmargins\">8 Padding, Borders and Margins</h1>\n<ul>\n<li>Percentage margin depends on parent's width, even margin-top and margin-bottom</li>\n<li>If margin-top and margin-bottom depends on parent's height, there will be infinite loop</li>\n<li>The treatment of percentage values for top and bottom margins is different for positioned elements<ul>\n<li>I guess it is because the size of element does not depends on parent anymore</li></ul></li>\n<li>Margin top and bottom does not work in inline element</li>\n<li>Only line height, font size and vertical align can change the distance between lines</li>\n<li>Default border value</li>\n<li>border: none</li>\n<li>weight: medium</li>\n<li>color: foreground color</li>\n<li>In CSS 2.1, the element's background is the background of the content, padding, and border areas.</li>\n<li>Border cannot have percentage value</li>\n</ul>\n<h1 id=\"9colorsandbackgrounds\">9 Colors and Backgrounds</h1>\n<ul>\n<li><p><code>color</code> properties also change border color of elements if <code>border-color</code> is not set.</p></li>\n<li><p>Many form elements have border by default.</p></li>\n<li><p>Foreground color can be inherited, but not background.</p></li>\n<li><p><code>transparent</code> is a color keyword</p></li>\n<li><p>Background image with background color</p></li>\n<li><p>Serve as fallback when image fail to load</p></li>\n<li>Some image have alpha value\n\n<ul>\n<li>Background image is on top of background color</li>\n<li>Need some extra CSS to set up image overlay</li></ul>\n\n</li>\n<li><p>The background image-placement context in CSS 2 and 2.1 is the inner border edge</p></li>\n<li><p><code>background-attachment</code> attaches image to viewport</p></li>\n</ul>\n<h2 id=\"classnaming\">Class naming</h2>\n<p>It's actually better to pick class names that describe the type of information contained within, not the visual effect you're trying to achieve. It's preferable to pick a class name which actually mean something and, more importantly, are independent of any presentational concepts. So we don't need to rename if we want to change the visual effect</p>\n<h1 id=\"10floatingandpositioning\">10 Floating and Positioning</h1>\n<h2 id=\"float\">Float</h2>\n<ul>\n<li>Float will convert the element to <code>display: block</code></li>\n<li>Negative margin can make a float element higher than parent</li>\n<li>when the element is larger than parent it will overflow</li>\n<li>An inline box that overlaps with a float has its borders, background, and content all rendered \"on top\" of the float.</li>\n<li>A block box that overlaps with a float has its borders and background rendered \"behind\" the float, whereas its content is rendered \"on top\" of the float.</li>\n<li>PS: the overlap behavior is independent of source order</li>\n<li>Clearance is extra spacing added above an element's top margin to push it past any floated elements</li>\n<li>(percentage) max/min size is useful when use with float elements</li>\n</ul>\n<h2 id=\"others\">Others</h2>\n<ul>\n<li>Beside overflow hidden, we can clip the content by <code>clip</code></li>\n<li>Clip can have negative value (use with overflow hidden?)</li>\n<li>But the browser implementation is not consistent</li>\n<li><code>top: auto;</code> does not align the absolute positioned block vertical center</li>\n<li>It is used to reset the <code>top</code> property</li>\n</ul>\n<h1 id=\"11tablelayout\">11 Table Layout</h1>\n<ul>\n<li>It is impossible to give table cell margin (browser will ignore them)</li>\n<li>The position of first table column depends on language direction</li>\n<li>The CSS specification discourages, but does not prohibit, the positioning of table cells and other internal table elements.</li>\n<li>Table header and footer will be repeated in printed version, if the whole table is not fit in one page</li>\n<li>CSS table layout pick the \"row primacy\" principle:</li>\n<li>User explicitly define row, the browser find the column by calculation (we use <code>tr</code> but no <code>col</code> in table)</li>\n<li>In another words, it is row-oriented</li>\n<li>Anonymous table object - table with missing cell</li>\n<li>Browser will insert the missing cell automatically</li>\n<li>Table layer</li>\n<li>Table elements: cell, row, row groups, columns, columns, table</li>\n<li>Table style will be drawn first</li>\n<li>Border spacing = cell margin</li>\n<li><code>empty-cell: hidden;</code> make browser set empty cell to <code>display: none;</code></li>\n</ul>\n<h2 id=\"tablelayout\">table-layout</h2>\n<ul>\n<li><code>auto</code>: the table size is depends on the content</li>\n<li><code>fixed</code>: the table size is defined by the first row</li>\n<li><code>fixed</code> layout is fast to render, no need to go through all content</li>\n<li>Vertical align content in table center is easy, can use vertical align directly</li>\n<li><code>vertical-align</code> will make browser ignore <code>sub</code>, <code>super</code>, <code>text-top</code>, and <code>text-bottom</code> when applied to table cells</li>\n<li>Table layout can cause text wrap problem</li>\n<li><code>fixed</code> vs <code>auto</code>?</li>\n</ul>\n<h1 id=\"12listandgeneratedcontent\">12 List and Generated Content</h1>\n<p>CSS does not define the behavior of nonnumeric counting styles for negative counter</p>\n<h1 id=\"13userinterfacestyles\">13 User Interface Styles</h1>\n<ul>\n<li>There are default system style:</li>\n<li>font</li>\n<li>color</li>\n<li>cursor<ul>\n<li>can have graphic cursor</li></ul></li>\n<li>outline</li>\n</ul>\n<h1 id=\"14nonscreenmedia\">14 Non-Screen Media</h1>\n<h2 id=\"printversion\">Print version</h2>\n<ul>\n<li>Some suggested style to apply to printed version</li>\n<li>Overwrite background and font color</li>\n<li>No float and no column (width: auto)</li>\n<li>Position element out side the page is not a good solution to avoid rendering<ul>\n<li>Because this produce lots of blank page in printed version</li></ul></li>\n<li>Some style for paged media</li>\n<li><code>page-break-[before|after|inside]</code> prevent page break insert to the elements</li>\n<li><code>widow</code> and <code>orphan</code>: min number of word when having a new page</li>\n<li>There are detail page break rules explained in the book</li>\n<li>running head: item appear in every page</li>\n<li>use position fixed to implement running head</li>\n</ul>\n<h2 id=\"projection\">Projection</h2>\n<p>Not implemented by many browser</p>\n<h2 id=\"speaker\">Speaker</h2>\n<p>The book mentions styles in CSS2. The CSS3 specification is not finalised.</p>","filePath":"/Users/sunday/workspace/coding-sunday/source/_posts/review/css-the-definitive-guide-3rd-edition-2.md","slug":"css-the-definitive-guide-3rd-edition-2"}}