{"title":"Review of \"How much quality can we afford?","permalink":"/posts/how-much-quality-can-we-afford","post":{"title":"Review of \"How much quality can we afford?","categories":"Review","__content":"<p>Strive a balance between development speed and reusability.</p>\n<h2 id=\"points\">Points</h2>\n<p>I only pick the points I think it is correct here.</p>\n<ul>\n<li>The cost is development time</li>\n<li>Good quality mean<ul>\n<li>Free of bugs</li>\n<li>Few feature make for reusability</li>\n<li>Maintainable</li>\n<li>Knife through butter testing (Easy to test)</li></ul></li>\n<li>Minimal<ul>\n<li>No unuse feature</li>\n<li>No half baked ideas</li></ul></li>\n<li>Reusable code take more cost<ul>\n<li>About 3 times more, it mean we have to use it 4 times to recover the cost</li></ul></li>\n<li>Lean and Agile does not mean low quality</li>\n<li>Make defect prevention cheap by<ul>\n<li>Continuous integration</li>\n<li>Virgin install</li>\n<li>Test Driven Development</li>\n<li>Acceptance Test Driven Development</li>\n<li>Lightweight code-reviews</li>\n<li>Pair programming</li>\n<li>Static analysis tools </li></ul></li>\n</ul>\n<!-- more -->\n<h2 id=\"review\">Review</h2>\n<p>It mention good quality means 'no rework'. It is difficult to make a 'perfect' code during planing. The market is changing, the technology is changing, everything is changing. We may find the customers' requirement change. May be there are some new technology can solve the problem easily. We always need to refactor the code. I believe 'design for change' has a higher priority than 'design for no rework'.</p>\n<p>This powerpoint remind me that the cost of software development is 'time'. We should strive a balance between development time and feature. Reusability is not a golden rule, if the cost is too high, we can give up reusability. We are using time to judge the quality of code. I mean time we spent on both development and maintainace. Cost on maintainace is still have more weight than development cost.</p>\n<h2 id=\"summary\">Summary</h2>\n<p>It is a slide from an consulting company. It do not provide technical example, only some figures. Not very useful, but it reminds me some old idea on software development.</p>\n<p>It also mentions lots of jargon, it give me some keywords to search.</p>\n<p>Reference: <a href=\"http://www.allankelly.net/static/presentations/ABC2010_HowMuchQuality.pdf\">How much quality can we afford?</a>.</p>","date":"2016-06-09T06:03:33.000Z","filePath":"/Users/sunday/workspace/coding-sunday/source/_posts/review/how-much-quality-can-we-afford.md","slug":"how-much-quality-can-we-afford"}}