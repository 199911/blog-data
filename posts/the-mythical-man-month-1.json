{"title":"Review of \"the mythical man month\" chapter 1","permalink":"/the-mythical-man-month-1","post":{"title":"Review of \"the mythical man month\" chapter 1","date":"2016-06-04T00:00:00.000Z","categories":"Review","__content":"<p>Programming is fun and interesting. A lot of people can build functional programs, but only few of them can convert a program into a product or system. Why?</p>\n<h2 id=\"thejoysofprogramming\">The joys of programming</h2>\n<ul>\n<li>Joy of building things</li>\n<li>Fascination of watching complex system running</li>\n<li>Delight to build thing without limitation</li>\n<li>Excitement to learn new things</li>\n<li>Pleasure to build useful tool for others</li>\n</ul>\n<p>The joy of programming comes from the nature of a software. Software is abstract. You can build anything that you can imagine. You can build a complex software with no limitation, as long as it does not against logic. As the nature the programming is to automate repeated task, in other words, programming task are never repeat. The most excitement on programming is what comes from your imagination can produce visible output and become a useful tool for others.</p>\n<!-- more -->\n<h2 id=\"thewoesofprogramming\">The woes of programming</h2>\n<ul>\n<li>Even the smallest mistake can break the whole system</li>\n<li>Dependency on maldesigned, poorly implemented libraries</li>\n<li>Frustrating to get stuck on a bug</li>\n<li>The last bug take much more time to find than the first</li>\n<li>Good idea is already implemented, better idea require too much cost to implement</li>\n</ul>\n<p>Debugging is an essential skill for programmers. Programming is a language of logic, any minor mistake can crash the whole system. Top engineers can find out the bug quickly by reducing the scope of problem and prevent bugs be introduced again by improving system design.</p>\n<p>Programmers become more frustrated when the bug is not come from their code, but the third party library they are using. This kind of bugs are <a href=\"http://199911.github.io/review/2016/05/14/the-law-of-leaky-abstraction/\">inevitable</a>. To fix or having workaround on this kind of bugs require programmer to dig deep into the abstraction layers. It require programmer to read others' code and learn quick.</p>\n<p>Debugging skill can be trained and practised. It helps to ease the pain of debugging.</p>\n<p>However, the last point is more related to software engineering skills than programming, such as system design and project management. It requires the skills of convert idea into a feasible feature under limited resources, breaking big problems into tractable sub-problmes and engineer team management. The nature of software make software industry different. Software engineering skills can only be learnt from real world industry experience.</p>\n<h2 id=\"fromprogrammingtosoftwareengineering\">From programming to software engineering</h2>\n<p>Programming alone is fun, but when it comes to the industry world, it becomes woes. Why? What make the difference? We will see after classifying software into 4 types.</p>\n<h3 id=\"program\">Program</h3>\n<p>It is complete in itself, ready to be run by the author in a specific environment.</p>\n<h3 id=\"programmingproduct\">Programming Product</h3>\n<p>A programming product is a program can be run, tested, repaired and extended by anyone. It is generalized to be reuse in different environment with different data set.</p>\n<p>It takes 3 times effort to convert a program to programming product.</p>\n<h3 id=\"programmingsystem\">Programming System</h3>\n<p>Programming system is a set of interacting programs following the same standard on information exchange. These programs are integrated to complete large tasks with prescribed budget of resources. The underlying infrastructure is included in programming system. A programming system is not only code, but also take the memory space, computation time and infrastructure into consideration.</p>\n<p>It takes 3 times effort to build program system from programs.</p>\n<h3 id=\"programmingsystemsproduct\">Programming Systems Product</h3>\n<p>It have all characteristic of programming product and system. It is what a tech company want to build. It cost nine times as much to build a single program.</p>\n<p>Many programmers oversimplified software. The cost of building software not only come from codes, but also infrastructure, long term maintenances and support. Many programmers fail to build a software from a program because they underestimate the cost on software projects and lack project management skills.</p>\n<h2 id=\"conclusion\">Conclusion</h2>\n<ul>\n<li>Enjoy the joy of programming</li>\n<li>Learn to debug</li>\n<li>Pay more attention on software engineering skills, not only programming skills</li>\n<li>It is impossible to build a great product without a team. When there is a team, you need project management.</li>\n</ul>\n<h2 id=\"reference\">Reference</h2>\n<p>The Mythical man-month (anniversary edition) chapter one</p>","filePath":"/Users/sunday/workspace/coding-sunday/source/_posts/review/the-mythical-man-month-1.md","slug":"the-mythical-man-month-1"}}