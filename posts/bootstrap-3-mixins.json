{"title":"Implementation of Bootstrap 3 - mixins.less","language":"en-us","date":"2016-08-28T00:00:00.000Z","categories":"Code","__content":"<p><code>mixins.less</code> contains utilities, components, skins and layout 'functions' of LESS.</p>\n<h2 id=\"utilitiesmixins\">Utilities Mixins</h2>\n<h3 id=\"mixinshidetextless\"><code>mixins/hide-text.less</code></h3>\n<p>It is used to hide the text in the dom. Why don't we use <code>display: none</code> or <code>visible: hidden</code>? Because screen reader cannot read it. An <a href=\"https://github.com/twbs/bootstrap/issues/10076\">issue</a> on GitHub show a use case. Screen reader don't have OCR and cannot read the text in image, we can put the image in background of an DOM, put the text inside the DOM. So screen reader can read it. To hide the text from other users, we can use the <code>.hide-text</code> mixin.</p>\n<h3 id=\"mixinsopacityless\"><code>mixins/opacity.less</code></h3>\n<p>It adds IE 8 support on <code>opacity</code>. If we don't need to suppport IE 8, we can use the <code>opacify</code> directly.</p>\n<!-- more -->\n<h3 id=\"mixinsimageless\"><code>mixins/image.less</code></h3>\n<p>It has two mixins. The first one is for responsive image, which scale the image with ratio fixed.The second one <code>.img-retina(@file-1x; @file-2x; @width-1x; @height-1x)</code> is for retina image.</p>\n<h4 id=\"whyweneedspecialhandleonretinaimage\">Why we need special handle on retina image?</h4>\n<p>From this <a href=\"https://www.sitepoint.com/css-techniques-for-retina-displays/\">article</a>, the term 'pixel' used in images and CSS have a subtle difference. The pixel of image is the smallest physical unit in a display, but the CSS pixel is an abstract unit which is device independent. Suppose we display a 200*200 image in physical pixel. The image is small on a screen with higher dpi, because the more pixel can be shown in the same area. If the image is in CSS pixel, the image size is the same in screen with any DPI.</p>\n<p>Retina image is image with a high resolution, if we use CSS pixel, the image will be extremely large, which may break the page's layout. Therefore we need to limit the size by parameter <code>@width-1x</code> and <code>@height-1x</code>. If the user don't have a retina display, we don't need to download and display the retina version of image (<code>@file-2x</code>), we can display a smaller image (<code>@file-1x</code>) with standard resolution.</p>\n<h3 id=\"mixinslabelsless\"><code>mixins/labels.less</code></h3>\n<p>It is used to create labels with different color, we can use this to create custom labels easily. Should it be components mixin?</p>\n<h3 id=\"mixinsresetfilterless\"><code>mixins/reset-filter.less</code></h3>\n<p>It is used to remove the gradient background in IE 9 or below. Seem IE have some bugs on the gradient background, there are use cases on resetting the filter.</p>\n<h3 id=\"mixinsresponsivevisibilityless\"><code>mixins/responsive-visibility.less</code></h3>\n<p>It is for the visibility of <code>.visible-{screen size}</code>. Bootstrap 3 use <code>!important</code> in display property to override the <code>display: none;</code>. It sets <code>display: table !important;</code>, <code>display: table-row !important;</code> and <code>display: table-cell !important;</code> for table, tr, th and td. For other element, <code>display: block !important;</code>. So when applying visible class on table element or non-block elements, we need to use <code>.visible-{screen size}-block</code>, <code>.visible-{screen size}-inline</code> and <code>.visible-{screen size}-inline-block</code>.</p>\n<h3 id=\"mixinssizeless\"><code>mixins/size.less</code></h3>\n<p>Having two mixin <code>size</code> and <code>square</code>, trivial.</p>\n<h3 id=\"mixinstabfocusless\"><code>mixins/tab-focus.less</code></h3>\n<p>Adding outline to the button when using keyboard tab to focus.</p>\n<h3 id=\"mixinsresettextless\"><code>mixins/reset-text.less</code></h3>\n<p>This mixin applied on tooltip and popover, because this element can be place in any place, the text style may be affect by the parent.</p>\n<h3 id=\"mixinstextemphasisless\"><code>mixins/text-emphasis.less</code></h3>\n<p>This mixin is a helper function to set text color and hover color. It is used in <code>.text-{primary, success ...}</code> class.</p>\n<h3 id=\"mixinstextoverflowless\"><code>mixins/text-overflow.less</code></h3>\n<p>The file name explains itself. It configure <code>overflow</code>, <code>text-overflow</code> and <code>white-space</code> property</p>\n<h3 id=\"mixinsvendorprefixesless\"><code>mixins/vendor-prefixes.less</code></h3>\n<p>The file name explain itself, but it is deprecated as there is a grunt module <code>Autoprefixer</code>. These depends on browsers' implementation and will be updated from time to time, don't spend too much time on reading it.</p>\n<h2 id=\"componentsmixins\">Components Mixins</h2>\n<p>For some components, the style on <code>:focus</code> and <code>:hover</code> are different. May research the user usability use case. Nothing special.</p>\n<h2 id=\"skinsmixins\">Skins Mixins</h2>\n<p>Mixins for <code>background-color</code> hover effect, <code>border-radius</code> and gradient background.</p>\n<h2 id=\"layoutmixins\">Layout Mixins</h2>\n<h3 id=\"mixinsclearfixless\"><code>mixins/clearfix.less</code></h3>\n<p>For clearfix, we need to apply <code>clear: both;</code> in sibling element. But this mixin apply the style on <code>:after</code>, we can apply the <code>.clearfix</code> class on parent div, which is easier to maintain.</p>\n<h3 id=\"mixinscenterblockless\"><code>mixins/center-block.less</code></h3>\n<p>Align a block element horizontal center.</p>\n<h3 id=\"mixinsnavverticalalignless\"><code>mixins/nav-vertical-align.less</code></h3>\n<p>Align the element inside a nav bar by calculating margin top and bottom.</p>\n<h3 id=\"mixinsgridframeworkless\"><code>mixins/grid-framework.less</code></h3>\n<p>It create the column class in grid system.</p>\n<h3 id=\"mixinsgridless\"><code>mixins/grid.less</code></h3>\n<p>Create the container, row, column push and pull class.</p>","filePath":"/Users/sunday/workspace/coding-sunday/source/_posts/code/bootstrap-3-mixins.md","slug":"bootstrap-3-mixins"}