{"title":"Review of \"Get off Your Horse and Stop Coding like a Cowboy\"","permalink":"/stop-coding-like-a-cowboy","post":{"title":"Review of \"Get off Your Horse and Stop Coding like a Cowboy\"","date":"2016-05-08T00:00:00.000Z","categories":"Review","__content":"<h2 id=\"onemanteam\">One man team</h2>\n<ul>\n<li>Zero-Communication Overhead</li>\n<li>Know all aspects of codebase</li>\n<li>Usually have lower quality<ul>\n<li>No peer pressure to stop doing dirty hack. Code become patchy and messy.</li></ul></li>\n</ul>\n<!-- more -->\n<h2 id=\"agileteam\">Agile Team</h2>\n<ul>\n<li>Product Backlog (Tickets)<ul>\n<li>Feature request</li>\n<li>Describe 'what to build', but not 'how to build'</li></ul></li>\n<li>What is Sprint?<ul>\n<li>The collection of work (tickets) to be done in a certain timeframe.</li>\n<li>The timeframe can be 1 week, 2 weeks or even 1 month.</li>\n<li>Each member was assigned some tickets.</li>\n<li>Some tickets are unassigned, members who finish their work before the end can pick them.</li>\n<li>Only deploy at the end of sprint.</li>\n<li>If member cannot finish the task, they have to communicate before the end of sprint</li></ul></li>\n<li>Sprint planning<ul>\n<li>Before the end of sprint, team need to pick important tasks for the next sprint</li>\n<li>Use \"Story point\" to measure complexity, not time<ul>\n<li>Because different engineer need different amount of time to finish it.</li></ul></li></ul></li>\n<li>Stand-up meetings (SCRUM Meetings)<ul>\n<li>10-15 minute</li>\n<li>Answer 3 questions:<ul>\n<li>What did you do yesterday?</li>\n<li>What are you going to work on today?</li>\n<li>Is anything preventing you from getting what you need to done?</li></ul></li>\n<li>Another meeting may be scheduled if follow up is needed.</li></ul></li>\n<li>Task Boards<ul>\n<li>Each one have at most one task at the same time.</li>\n<li>Keep track tasks in different stagings, such as<ul>\n<li>To do</li>\n<li>In progress</li>\n<li>Finished</li></ul></li>\n<li>Having a real board can help in stand up meeting.</li></ul></li>\n<li>Headphones mean: Don't bother me</li>\n<li>Best Practices<ul>\n<li>\"The stuff that is generally accepted as a good idea in the long run, even if it is a bit of a pain to implement in the short run.\"</li></ul></li>\n<li>Test Driven Development<ul>\n<li>More people work in the same project -&gt; # of code increase fast -&gt; software complexity grow fast -&gt; engineer don't know the big picture in detail -&gt; new code easy to break other's work</li>\n<li>Use test to verify the code is working</li></ul></li>\n<li>Continuous Integration<ul>\n<li>Run test automatically before integration.</li></ul></li>\n<li>Continuous Deployment<ul>\n<li>Automatically deploy to production once code is accepted</li></ul></li>\n<li>Pair Programming<ul>\n<li>One person code, another give alternative and suggestion.</li>\n<li>Switch position from time to time.</li>\n<li>As a junior developer, it is good to see how other code, to learn thing you don't know.</li></ul></li>\n<li>Code Review<ul>\n<li>To identify issues hasn't thought about by the person who write the code.</li>\n<li>Person who review should not involved in writing the code.</li></ul></li>\n<li>Code Style Guides</li>\n</ul>\n<h2 id=\"somequestionstoaskbydevelopers\">Some questions to ask by developers</h2>\n<ol>\n<li>Do you use test driven development?  If so, dive in and find out more specifics of how they write tests.</li>\n<li>Do you have continuous integration or deployment setup?</li>\n<li>How do you feel about pair programming?</li>\n<li>Do you follow a certain coding style guide?</li>\n<li>How do you conduct code reviews?</li>\n</ol>\n<h2 id=\"review\">Review</h2>\n<p>The Story point concept assume the difficulty of a task is the same for all engineers. It ignores the fact that knowledge need to be transfer if a new engineer take over the task.</p>\n<p>Reference: <a href=\"http://blog.thefirehoseproject.com/posts/best-team-tactics-to-write-software/\">Get off Your Horse and Stop Coding like a Cowboy</a>.</p>","filePath":"/Users/sunday/workspace/coding-sunday/source/_posts/review/stop-coding-like-a-cowboy.md","slug":"stop-coding-like-a-cowboy"}}