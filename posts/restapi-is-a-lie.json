{"title":"review of \"RESTful APIs, the big lie\"","permalink":"/posts/restapi-is-a-lie","post":{"title":"review of \"RESTful APIs, the big lie\"","date":"2016-06-06T00:00:00.000Z","categories":"Review","__content":"<p>Someone think RESTful api is bad and give 5 points, but I think it does not make sense.</p>\n<!-- more -->\n<h3 id=\"thereislittleagreementonwhatarestfulapi\">There is little agreement on what a RESTful API</h3>\n<p>I would say yes if the scope is for all public API. There are different interpretation on the HTTP response codes. There are no strict rules or unified guidelines on RESTful API. But the HTTP response code and method give us a set of handy vocabulary. Companies can easily define their own rules and following them internally. It does save our development times. The vague HTTP method and response code give us freedom on design and implement our own API. User should refer the the API documentation for more details.</p>\n<p>The proposer suggest using a set of self defined vocabulary, it make the action precise. In my point of view, user still need to read the document to see what vocabularies are avaliable. This does not shorten the development time.</p>\n<h3 id=\"therestvocabularyisnotfullysupported\">The REST vocabulary is not fully supported</h3>\n<p>Not all verbs or response codes for the HTTP protocol. It is true, but most of us use AJAX to make RESTful API call. Who care HTTP not supporting DELETE or PUT?</p>\n<h3 id=\"therestvocabularyisnotrichenoughforapis\">The REST vocabulary is not rich enough for APIs</h3>\n<p>It is true, but in most cases, we actually only need 4 actions: create, read, update, delete. We always can map any actions into these actions. For example, activating a user account can be interpret as updating the user's account to active. This will introduce ambigouity, but clear documentation with careful resource naming can solve this problem.</p>\n<h3 id=\"restfulapisareveryhardtodebug\">RESTful APIs are very hard to debug</h3>\n<p>I can argee with this point. As RESTful API is popular, there are lots of tools help debugging and building RESTful API. Using RESTful API with right tools should be much more productive than using your unique API structure.</p>\n<h3 id=\"restfulapisareusuallytiedtohttp\">RESTful APIs are usually tied to HTTP</h3>\n<p>Why not? Most RESTful API build for web, it makes sense to use HTTP to transmit data. For some special case, we may not be able to use HTTP, but it is not a reason to say RESTful is bad.</p>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>RESTful API is a simple and easy to follow standard. RESTful is not perfect, but there are lots of tools and article help us to build a good design. RESTful API is useful in many common scenario and worth following.</p>\n<h2 id=\"reference\">Reference</h2>\n<ul>\n<li><a href=\"https://mmikowski.github.io/the_lie/\">RESTful APIs, the big lie</a></li>\n</ul>","filePath":"/Users/sunday/workspace/coding-sunday/source/_posts/review/restapi-is-a-lie.md","slug":"restapi-is-a-lie"}}